import 'controller/card_edit_or_delete_controller.dart';import 'package:ecommerce_buyers_app/core/app_export.dart';import 'package:ecommerce_buyers_app/presentation/blank_cart_page/blank_cart_page.dart';import 'package:ecommerce_buyers_app/presentation/home_page/home_page.dart';import 'package:ecommerce_buyers_app/presentation/profile_page/profile_page.dart';import 'package:ecommerce_buyers_app/widgets/app_bar/appbar_leading_iconbutton.dart';import 'package:ecommerce_buyers_app/widgets/app_bar/appbar_title.dart';import 'package:ecommerce_buyers_app/widgets/app_bar/custom_app_bar.dart';import 'package:ecommerce_buyers_app/widgets/custom_bottom_bar.dart';import 'package:ecommerce_buyers_app/widgets/custom_elevated_button.dart';import 'package:ecommerce_buyers_app/widgets/custom_text_form_field.dart';import 'package:flutter/material.dart';class CardEditOrDeleteScreen extends GetWidget<CardEditOrDeleteController> {const CardEditOrDeleteScreen({Key? key}) : super(key: key);

@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, appBar: _buildAppBar(), body: SizedBox(width: double.maxFinite, child: Column(children: [SizedBox(height: 33.v), Expanded(child: SingleChildScrollView(child: _buildCardEditOrDelete()))])), bottomNavigationBar: _buildBottomBar())); } 
/// Section Widget
PreferredSizeWidget _buildAppBar() { return CustomAppBar(leadingWidth: 66.h, leading: AppbarLeadingIconbutton(imagePath: ImageConstant.imgArrowDownPrimarycontainer, margin: EdgeInsets.only(left: 24.h, top: 7.v, bottom: 7.v), onTap: () {onTapArrowDown();}), centerTitle: true, title: AppbarTitle(text: "lbl_card_list".tr)); } 
/// Section Widget
Widget _buildCardEditOrDelete() { return Padding(padding: EdgeInsets.only(left: 24.h, right: 24.h, bottom: 5.v), child: Column(children: [CustomTextFormField(controller: controller.hiddenATMNoController, hintText: "msg_230_523".tr, hintStyle: CustomTextStyles.bodyMediumGray900, prefix: Container(margin: EdgeInsets.fromLTRB(18.h, 17.v, 30.h, 17.v), child: CustomImageView(imagePath: ImageConstant.imgImage17, height: 15.v, width: 21.h)), prefixConstraints: BoxConstraints(maxHeight: 50.v), suffix: Container(margin: EdgeInsets.fromLTRB(30.h, 13.v, 11.h, 13.v), child: CustomImageView(imagePath: ImageConstant.imgFrameBlueGray900, height: 24.adaptSize, width: 24.adaptSize)), suffixConstraints: BoxConstraints(maxHeight: 50.v), contentPadding: EdgeInsets.symmetric(vertical: 14.v), borderDecoration: TextFormFieldStyleHelper.fillBlueTL6, fillColor: appTheme.blue5001), SizedBox(height: 20.v), CustomTextFormField(controller: controller.hiddenATMNoController1, hintText: "msg_852_159".tr, hintStyle: CustomTextStyles.bodyMediumGray900, textInputAction: TextInputAction.done, prefix: Container(margin: EdgeInsets.fromLTRB(18.h, 16.v, 30.h, 16.v), child: CustomImageView(imagePath: ImageConstant.imgImage18, height: 18.adaptSize, width: 18.adaptSize)), prefixConstraints: BoxConstraints(maxHeight: 50.v), suffix: Container(margin: EdgeInsets.fromLTRB(30.h, 13.v, 11.h, 13.v), child: CustomImageView(imagePath: ImageConstant.imgFrameBlueGray900, height: 24.adaptSize, width: 24.adaptSize)), suffixConstraints: BoxConstraints(maxHeight: 50.v), contentPadding: EdgeInsets.symmetric(vertical: 14.v), borderDecoration: TextFormFieldStyleHelper.fillBlueTL61, fillColor: appTheme.blue5006), SizedBox(height: 20.v), CustomElevatedButton(text: "msg_add_another_card".tr, rightIcon: Container(margin: EdgeInsets.only(left: 6.h), child: CustomImageView(imagePath: ImageConstant.imgFrameWhiteA70018x18, height: 18.adaptSize, width: 18.adaptSize)), buttonStyle: CustomButtonStyles.fillPrimaryTL6, buttonTextStyle: CustomTextStyles.titleSmallPoppinsWhiteA700, onPressed: () {onTapAddAnotherCard();})])); } 
/// Section Widget
Widget _buildBottomBar() { return CustomBottomBar(onChanged: (BottomBarEnum type) {Get.toNamed(getCurrentRoute(type), id: 1);}); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Home: return AppRoutes.homePage; case BottomBarEnum.Cart: return AppRoutes.blankCartPage; case BottomBarEnum.Search: return "/"; case BottomBarEnum.Profile: return AppRoutes.profilePage; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(String currentRoute) { switch (currentRoute) {case AppRoutes.homePage: return HomePage(); case AppRoutes.blankCartPage: return BlankCartPage(); case AppRoutes.profilePage: return ProfilePage(); default: return DefaultWidget();} } 
/// Navigates to the addCardBlankOneScreen when the action is triggered.
onTapArrowDown() { Get.toNamed(AppRoutes.addCardBlankOneScreen, ); } 
/// Navigates to the addCardBlankOneScreen when the action is triggered.
onTapAddAnotherCard() { Get.toNamed(AppRoutes.addCardBlankOneScreen, ); } 
 }
